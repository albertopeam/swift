syntax = "proto3";
package cosmos.bank.v1beta1;

import "pagination.proto";
import "gogo.proto";
import "coin.proto";
import "cosmos.proto";
//import "annotations.proto";
//import "cosmos/base/query/v1beta1/pagination.proto";
//import "gogoproto/gogo.proto";
//import "google/api/annotations.proto";
//import "cosmos/base/v1beta1/coin.proto";
//import "cosmos/bank/v1beta1/bank.proto";
//import "cosmos_proto/cosmos.proto";

option go_package = "github.com/cosmos/cosmos-sdk/x/bank/types";

// Query defines the gRPC querier service.
service Query {
  // AllBalances queries the balance of all coins for a single account.
  rpc AllBalances(QueryAllBalancesRequest) returns (QueryAllBalancesResponse) {
    //option (google.api.http).get = "/cosmos/bank/v1beta1/balances/{address}";
  }
}

// QueryBalanceRequest is the request type for the Query/AllBalances RPC method.
message QueryAllBalancesRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  // address is the address to query balances for.
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryAllBalancesResponse is the response type for the Query/AllBalances RPC
// method.
message QueryAllBalancesResponse {
  // balances is the balances of all the coins.
  repeated cosmos.base.v1beta1.Coin balances = 1
      [(gogoproto.nullable) = false];
      //[(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}